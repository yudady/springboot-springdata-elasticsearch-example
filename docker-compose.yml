version: '3.1'
services:
    zookeeper:
        image: zookeeper ##3.4.10
        #container_name: zookeeperdev
        restart: always
        ports:
          - 2181:2181
    kafka:
        image: wurstmeister/kafka:2.11-0.11.0.3
        #container_name: kafkadev
        ports:
            - 6667:6667
        depends_on:
          - zookeeper
        environment:
            KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
            KAFKA_PORT: 6667
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: "storm_webSocket_1:1:1,betRadar_liveScout_json:1:1"
        restart: always
    redis:
        image: redis:4
        #container_name: redisdev
        ports:
            - 6379:6379
        restart: always
        command: redis-server /usr/local/etc/redis.conf
        volumes:
            - ./data/redis:/usr/local/var/db/redis
            - ./conf/redis.conf:/usr/local/etc/redis.conf
    db:
        image: mysql:5.7
        #container_name: tommy_db
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: abcd1234
            MYSQL_USER: latdbdev
            MYSQL_PASSWORD: l@tThe0ne
        volumes:
          - ./mysql:/var/lib/mysql
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        #container_name: elasticsearch
        environment:
          - cluster.name=elasticsearch
          - discovery.type=single-node
          - network.bind_host=0.0.0.0
        ulimits:
            memlock:
              soft: -1
              hard: -1
        volumes:
           #- ./data:/usr/share/elasticsearch/data
           - ./data:/var/lib/elasticsearch
           - ./logs:/var/logs/elasticsearch
        ports:
           - 9300:9300
           - 9200:9200
    elasticsearch-hq:
        image: elastichq/elasticsearch-hq:release-v3.3.0
        container_name: elasticsearch-hq-330
        depends_on:
            - elasticsearch
        ports:
            - "5000:5000"
    kibana:
        image: docker.elastic.co/kibana/kibana:6.5.4
        container_name: kibana
        environment:
            SERVER_NAME: kibana
        depends_on:
            - elasticsearch
        ports:
            - "5601:5601"

